name: Compile Python Code

on:
  push:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Compile to executable
        run: pyinstaller --onefile your_script.py
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows-executable
          path: dist/your_script.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Compile to executable
        run: pyinstaller --onefile your_script.py
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-executable
          path: dist/your_script

  create-release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          TAG_NAME=$(date +'%Y%m%d%H%M%S')
          gh release create $TAG_NAME -t "Release $TAG_NAME" -n "Automated release" --target main
      - name: Upload Windows executable
        uses: actions/upload-release-asset@v1
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          release_id: ${{ steps.create-release.outputs.release_id }}
          asset_path: ./dist/your_script.exe
          asset_name: your_script.exe
          asset_content_type: application/octet-stream
      - name: Upload Linux executable
        uses: actions/upload-release-asset@v1
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          release_id: ${{ steps.create-release.outputs.release_id }}
          asset_path: ./dist/your_script
          asset_name: your_script
          asset_content_type: application/octet-stream
